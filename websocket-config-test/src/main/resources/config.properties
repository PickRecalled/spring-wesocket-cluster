websocket.server.id=server2
## redis
redis.config.prefix=spring.redis
spring.redis.hostname=127.0.0.1
spring.redis.database=0
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=


## kafka producer
kafka.producer.defaultTopic=demo
kafka.producer.bootstrap.servers=127.0.0.1:9092
kafka.producer.acks=all
kafka.producer.retries=0
kafka.producer.batch.size=16384
kafka.producer.linger.ms=1
kafka.producer.buffer.memory=33554432
kafka.producer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.value.serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.partitioner.class=com.wuhulala.kafka.partitioner.MoldPartitioner

## kafka consumer
kafka.consumer.bootstrap.servers=127.0.0.1:9092
kafka.consumer.group.id=websocket
kafka.consumer.enable.auto.commit=false
kafka.consumer.auto.commit.interval.ms=5000
kafka.consumer.session.timeout.ms=30000
kafka.consumer.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer.concurrency=1

kafka.consumer.fetch.min.bytes=200
# \u62C9\u53D6\u5143\u6570\u636E\u7684\u6700\u957F\u7B49\u5F85\u65F6\u95F4
kafka.consumer.fetch.max.wait.ms=5000
# \u5355\u6B21\u6700\u5927\u6761\u6570
kafka.consumer.max.poll.records=20